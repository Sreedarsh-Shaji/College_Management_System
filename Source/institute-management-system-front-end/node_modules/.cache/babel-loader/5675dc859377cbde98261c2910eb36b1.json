{"ast":null,"code":"class AuthenticationService {\n  registerSuccessfulAdminLogin(admin) //Registers admin login\n  {\n    console.log(\"Register successful login\");\n    sessionStorage.setItem('authenticatedAdmin', admin);\n  }\n\n  registerSuccessfulAgencyLogin(agency) //Registers agency login\n  {\n    console.log(\"Register successful agency login\");\n    sessionStorage.setItem('authenticatedAgency', agency);\n  }\n\n  isAdminLoggedIn() //Return true if admin is logged in\n  {\n    let user = sessionStorage.getItem('authenticatedAdmin');\n    return user === null ? false : true;\n  }\n\n  isAgencyLoggedIn() //Return true if agency is logged in\n  {\n    let user = sessionStorage.getItem('authenticatedAgency');\n    return user === null ? false : true;\n  }\n\n  adminLogout() //Removes admin entity\n  {\n    sessionStorage.removeItem('authenticatedAdmin');\n  }\n\n  agencyLogout() //Removes agency entity\n  {\n    sessionStorage.removeItem('authenticatedAgency');\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    return user === null ? false : true;\n  }\n\n  getLoggedinUsername() {\n    return sessionStorage.getItem('authenticatedUser');\n    ;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/home/sreedarsh/Documents/Sreedarsh S/College_Management_System/Source/institute-management-system-front-end/src/AuthenticationComponents/AuthenticationService.js"],"names":["AuthenticationService","registerSuccessfulAdminLogin","admin","console","log","sessionStorage","setItem","registerSuccessfulAgencyLogin","agency","isAdminLoggedIn","user","getItem","isAgencyLoggedIn","adminLogout","removeItem","agencyLogout","logout","isUserLoggedIn","getLoggedinUsername"],"mappings":"AAAA,MAAMA,qBAAN,CAA2B;AAEvBC,EAAAA,4BAA4B,CAACC,KAAD,EAAO;AACnC;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,oBAAvB,EAA4CJ,KAA5C;AACH;;AAGDK,EAAAA,6BAA6B,CAACC,MAAD,EAAQ;AACrC;AACIL,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,qBAAvB,EAA6CE,MAA7C;AACH;;AAEDC,EAAAA,eAAe,GAAE;AACjB;AACI,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,oBAAvB,CAAX;AACA,WAAOD,IAAI,KAAK,IAAT,GAAgB,KAAhB,GAAwB,IAA/B;AACH;;AAEDE,EAAAA,gBAAgB,GAAE;AAClB;AACI,QAAIF,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,qBAAvB,CAAX;AACA,WAAOD,IAAI,KAAK,IAAT,GAAgB,KAAhB,GAAwB,IAA/B;AACH;;AAGDG,EAAAA,WAAW,GAAE;AACb;AACIR,IAAAA,cAAc,CAACS,UAAf,CAA0B,oBAA1B;AACH;;AAEDC,EAAAA,YAAY,GAAE;AACd;AACIV,IAAAA,cAAc,CAACS,UAAf,CAA0B,qBAA1B;AACH;;AAEDE,EAAAA,MAAM,GACN;AACIX,IAAAA,cAAc,CAACS,UAAf,CAA0B,mBAA1B;AACH;;AAGDG,EAAAA,cAAc,GACd;AACI,QAAIP,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AACA,WAAOD,IAAI,KAAK,IAAT,GAAgB,KAAhB,GAAwB,IAA/B;AACH;;AAEAQ,EAAAA,mBAAmB,GACnB;AACI,WAAOb,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAP;AAAmD;AACtD;;AArDqB;;AAyD3B,eAAe,IAAIX,qBAAJ,EAAf","sourcesContent":["class AuthenticationService{\r\n\r\n    registerSuccessfulAdminLogin(admin)//Registers admin login\r\n    {\r\n        console.log(\"Register successful login\");\r\n        sessionStorage.setItem('authenticatedAdmin',admin);\r\n    }\r\n\r\n    \r\n    registerSuccessfulAgencyLogin(agency)//Registers agency login\r\n    {\r\n        console.log(\"Register successful agency login\");\r\n        sessionStorage.setItem('authenticatedAgency',agency);\r\n    }\r\n\r\n    isAdminLoggedIn()//Return true if admin is logged in\r\n    { \r\n        let user = sessionStorage.getItem('authenticatedAdmin');\r\n        return user === null ? false : true ;\r\n    }\r\n\r\n    isAgencyLoggedIn()//Return true if agency is logged in\r\n    { \r\n        let user = sessionStorage.getItem('authenticatedAgency');\r\n        return user === null ? false : true ;\r\n    }\r\n\r\n\r\n    adminLogout()//Removes admin entity\r\n    {\r\n        sessionStorage.removeItem('authenticatedAdmin');\r\n    }\r\n\r\n    agencyLogout()//Removes agency entity\r\n    {\r\n        sessionStorage.removeItem('authenticatedAgency');\r\n    }\r\n\r\n    logout()\r\n    {\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    \r\n    isUserLoggedIn()\r\n    { \r\n        let user = sessionStorage.getItem('authenticatedUser');\r\n        return user === null ? false : true ;\r\n    }\r\n\r\n     getLoggedinUsername()\r\n     {\r\n         return sessionStorage.getItem('authenticatedUser');;\r\n     }\r\n\r\n}\r\n\r\nexport default new AuthenticationService(); "]},"metadata":{},"sourceType":"module"}