{"ast":null,"code":"var _jsxFileName = \"/home/sreedarsh/Documents/Sreedarsh S/College_Management_System/Source/institute-management-system-front-end/src/AdminAccount/AllUsers.js\";\nimport React, { Component } from 'react';\nimport Header from './CommonComponents/Header';\nimport Footer from './CommonComponents/Footer';\nimport AuthenticationDataService from '../AuthenticationComponents/AuthenticationDataService';\nimport moment from 'moment';\nimport AuthenticationService from '../AuthenticationComponents/AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AllUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      message: null,\n      userstatus: \"Suspend\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(values) {\n    const {\n      history\n    } = this.props;\n    AuthenticationDataService.userStatus(this.state.userstatus).then(response => {\n      AuthenticationService.changeUserStatus(response.data);\n\n      if (response.data.adminEmail == null) {\n        this.setState({\n          userStatus: \"Invalid credentials\"\n        });\n      } else {\n        this.setState({\n          error: \"Valid credentials\"\n        });\n        history.push('/Admin/Home');\n      }\n\n      console.log(response.data);\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        error: \"Invalid credentials\"\n      });\n    });\n  }\n\n  componentDidMount() {\n    //Called immediately when the component is mounted\n    //this.refreshToDos()\n    AuthenticationDataService.getAllusers().then(response => {\n      this.setState({\n        users: response.data\n      });\n      console.log(response.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"List todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"License Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Active since\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"User Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.userId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.licenseNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: moment(user.creationDateTime).format('DD-MM-YYYY hh:mm:ss')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-warning\",\n                    onClick: this.onSubmit,\n                    children: this.state.userstatus\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success\",\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this)]\n              }, user.userId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AllUsers;","map":{"version":3,"sources":["/home/sreedarsh/Documents/Sreedarsh S/College_Management_System/Source/institute-management-system-front-end/src/AdminAccount/AllUsers.js"],"names":["React","Component","Header","Footer","AuthenticationDataService","moment","AuthenticationService","AllUsers","constructor","props","state","users","message","userstatus","onSubmit","bind","values","history","userStatus","then","response","changeUserStatus","data","adminEmail","setState","error","push","console","log","catch","err","componentDidMount","getAllusers","render","map","user","userId","name","email","licenseNumber","creationDateTime","format","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Header from './CommonComponents/Header';\nimport Footer from './CommonComponents/Footer';\nimport AuthenticationDataService from '../AuthenticationComponents/AuthenticationDataService';\n\nimport moment from 'moment';\nimport AuthenticationService from '../AuthenticationComponents/AuthenticationService';\n\nclass AllUsers extends Component {\n\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            users: [],\n            message : null,\n            userstatus: \"Suspend\"\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(values) {\n\n        const { history } = this.props;\n\n        AuthenticationDataService.userStatus(this.state.userstatus)\n        .then((response) => { \n                \n                AuthenticationService.changeUserStatus(response.data);  \n                if(response.data.adminEmail == null)\n                {\n                    this.setState({userStatus:\"Invalid credentials\"})\n                } \n                else{  \n                    this.setState({error:\"Valid credentials\"})\n                    history.push('/Admin/Home');\n                }\n                console.log(response.data) })\n        .catch(  \n        err=>{\n            console.log(err)\n            this.setState({error:\"Invalid credentials\"})\n        } )\n    }\n\n\n    componentDidMount() { //Called immediately when the component is mounted\n        //this.refreshToDos()\n        AuthenticationDataService.getAllusers().\n        then( response => { \n            this.setState ({ users : response.data }) \n            console.log( response.data )\n            } )\n    }\n\n\n    render() {\n        return (\n            <>\n            \n            <Header/>\n                <div>\n                <h1>List todos</h1>\n                <div className=\"container\">\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>id</th>\n                                <th>Username</th>\n                                <th>Email</th>\n                                <th>License Number</th>\n                                <th>Active since</th>\n                                <th>User Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                                this.state.users.map(\n                                    user =>\n                                        <tr key={user.userId}>\n                                            <td>{user.userId}</td>\n                                            <td>{user.name}</td>\n                                            <td>{user.email}</td>\n                                            <td>{user.licenseNumber}</td>\n                                            <td>{moment(user.creationDateTime).format('DD-MM-YYYY hh:mm:ss')}</td>\n                                            <td>{user.status}</td>\n\n                                             {/*<td>{user.done.toString()}</td>*/}\n                                            <td><button className=\"btn btn-warning\" onClick={this.onSubmit}>{this.state.userstatus}</button></td>\n                                            <td><button className=\"btn btn-success\">Update</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                        </table>\n                </div>\n                </div>\n            <Footer/>\n\n            </>\n        );\n    }\n}\n\nexport default AllUsers;"]},"metadata":{},"sourceType":"module"}