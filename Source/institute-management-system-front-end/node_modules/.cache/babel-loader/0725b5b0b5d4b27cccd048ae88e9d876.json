{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from 'universal-cookie';\n\nclass AdminAuthDataService {\n  getSystemStatus() {\n    let ret = axios.put(`http://localhost:8082/api/v1/admin/return_system_status`);\n    return ret;\n  }\n\n  adminSeeAllDepartments() {\n    let ret = axios.get(`http://localhost:8082/api/v1/admin/return_all_departments`);\n    return ret;\n  }\n\n  adminSeeAllClasses() {\n    let ret = axios.get(`http://localhost:8082/api/v1/admin/return_all_classes`);\n    return ret;\n  }\n\n  adminSeeAllStudents() {\n    let ret = axios.get(`http://localhost:8082/api/v1/admin/return_all_students`);\n    return ret;\n  }\n\n  adminSeeAllSessions() {\n    let ret = axios.get(`http://localhost:8082/api/v1/admin/see_all_sessions`);\n    return ret;\n  }\n\n  adminSeeAllExams() {\n    let ret = axios.get(`http://localhost:8082/api/v1/admin/see_all_exams`);\n    return ret;\n  }\n\n  adminSeeAllAssignments() {\n    let ret = axios.get(`http://localhost:8082/api/v1/admin/see_all_assignments`);\n    return ret;\n  }\n\n  addDepartment(department) {\n    let data = {\n      \"id\": 0,\n      \"name\": department\n    };\n    let ret = axios.post(`http://localhost:8082/api/v1/admin/add_department`, data);\n    return ret;\n  }\n\n  addStudent(inputData) {\n    let data = {\n      dob: inputData.dob,\n      email: inputData.email,\n      name: inputData.name,\n      password: inputData.dob,\n      phone_no: inputData.phoneNo,\n      student_id: 0,\n      user_name: \"Student \" + inputData.name\n    };\n    let ret = axios.post(`http://localhost:8082/api/v1/admin/add-student`, data);\n    return ret;\n  }\n\n  addTeacher(inputData) {\n    let data = {\n      department: inputData.dep,\n      dob: inputData.dob,\n      email: inputData.email,\n      name: inputData.name,\n      password: inputData.dob,\n      phone_no: inputData.phoneNo,\n      teacher_id: 0,\n      user_name: \"Teacher \" + inputData.name\n    };\n    let ret = axios.post(`http://localhost:8082/api/v1/admin/add-teacher`, data);\n    return ret;\n  }\n\n  addClass(inputData) {\n    let data = {\n      //name: \"\", strength: 0, dep: \"\",\n      id: 0,\n      department: inputData.dep,\n      maxStrength: inputData.strength,\n      name: inputData.name\n    };\n    let ret = axios.post(`http://localhost:8082/api/v1/admin/add-classes`, data);\n    return ret;\n  }\n\n  addParent(inputData) {\n    let data = {\n      student: inputData.dep,\n      dob: inputData.dob,\n      email: inputData.email,\n      name: inputData.name,\n      password: inputData.dob,\n      phone_no: inputData.phoneNo,\n      parent_id: 0,\n      user_name: \"Parent \" + inputData.name\n    };\n    let ret = axios.post(`http://localhost:8082/api/v1/admin/add-parent`, data);\n    return ret;\n  }\n  /* Teacher functionalites */\n\n\n  addSesson(inputData) {\n    var result = '';\n    var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < characters.length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    const cookies = new Cookies();\n    let teacher_id = cookies.get('teacher-id').teacher_id;\n    let data = {\n      cls: inputData.classname,\n      period: inputData.period,\n      sessionId: 0,\n      teacher: teacher_id,\n      time: inputData.time,\n      urlToSession: \"https://demos.openvidu.io/openvidu-call/#/\" + result\n    };\n    let ret = axios.post(`http://localhost:8082/api/v1/teacher/add_session`, data);\n    return ret;\n  }\n\n  addAssignment(inputData) {\n    const cookies = new Cookies();\n    let teacher_id = cookies.get('teacher-id').teacher_id;\n    let data = {\n      classId: 0,\n      description: inputData.description,\n      end: inputData.start,\n      id: 0,\n      open: true,\n      session: 0,\n      start: inputData.end,\n      subject: 0,\n      teacher: teacher_id,\n      title: inputData.name\n    };\n    let ret = axios.post(`http://localhost:8082/api/v1/teacher/add_assignment`, data);\n    return ret;\n  }\n\n  addExam(inputData) {\n    const cookies = new Cookies();\n    let teacher_id = cookies.get('teacher-id').teacher_id;\n    let data = {\n      endDate: \"2021-07-13T22:58:45.702Z\",\n      id: 0,\n      name: inputData.name,\n      noOfTests: 0,\n      stDate: inputData.date\n    };\n    let ret = axios.post(`http://localhost:8082/api/v1/teacher/add_exam`, data);\n    return ret;\n  }\n\n  addAttendance(sessionId) {\n    let ret = axios.get(`http://localhost:8082/api/v1/teacher/teacher/login/${studentId}/${sessionId}`);\n    return ret;\n  }\n\n}\n\nexport default new AdminAuthDataService();","map":{"version":3,"sources":["/home/sreedarsh/Documents/Sreedarsh S/College_Management_System/Source/institute-management-system-front-end/src/Student/CommonComponents/AdminAuthDataService.js"],"names":["axios","Cookies","AdminAuthDataService","getSystemStatus","ret","put","adminSeeAllDepartments","get","adminSeeAllClasses","adminSeeAllStudents","adminSeeAllSessions","adminSeeAllExams","adminSeeAllAssignments","addDepartment","department","data","post","addStudent","inputData","dob","email","name","password","phone_no","phoneNo","student_id","user_name","addTeacher","dep","teacher_id","addClass","id","maxStrength","strength","addParent","student","parent_id","addSesson","result","characters","charactersLength","length","i","charAt","Math","floor","random","cookies","cls","classname","period","sessionId","teacher","time","urlToSession","addAssignment","classId","description","end","start","open","session","subject","title","addExam","endDate","noOfTests","stDate","date","addAttendance","studentId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Cookies from 'universal-cookie';\n\n\nclass AdminAuthDataService {\n\n    getSystemStatus() {\n        let ret = axios.put(`http://localhost:8082/api/v1/admin/return_system_status`);\n        return ret;\n    }\n\n    adminSeeAllDepartments() {\n        let ret = axios.get(`http://localhost:8082/api/v1/admin/return_all_departments`)\n        return ret\n    }\n\n    adminSeeAllClasses() {\n        let ret = axios.get(`http://localhost:8082/api/v1/admin/return_all_classes`)\n        return ret\n    }\n\n    adminSeeAllStudents() {\n        let ret = axios.get(`http://localhost:8082/api/v1/admin/return_all_students`)\n        return ret\n    }\n\n    adminSeeAllSessions() {\n        let ret = axios.get(`http://localhost:8082/api/v1/admin/see_all_sessions`)\n        return ret\n    }\n\n    adminSeeAllExams() {\n        let ret = axios.get(`http://localhost:8082/api/v1/admin/see_all_exams`)\n        return ret\n    }\n    \n    adminSeeAllAssignments() {\n        let ret = axios.get(`http://localhost:8082/api/v1/admin/see_all_assignments`)\n        return ret\n    }\n\n\n    addDepartment(department) {\n        let data = {\n            \"id\": 0,\n            \"name\": department\n        };\n        let ret = axios.post(`http://localhost:8082/api/v1/admin/add_department`, data);\n        return ret;\n    }\n\n    addStudent(inputData) {\n        let data = {\n            dob: inputData.dob,\n            email: inputData.email,\n            name: inputData.name,\n            password: inputData.dob,\n            phone_no: inputData.phoneNo,\n            student_id: 0,\n            user_name: \"Student \" + inputData.name\n        }\n\n        let ret = axios.post(`http://localhost:8082/api/v1/admin/add-student`, data);\n        return ret;\n\n    }\n\n    addTeacher(inputData) {\n        let data = {\n            department: inputData.dep,\n            dob: inputData.dob,\n            email: inputData.email,\n            name: inputData.name,\n            password: inputData.dob,\n            phone_no: inputData.phoneNo,\n            teacher_id: 0,\n            user_name: \"Teacher \" + inputData.name\n        }\n        let ret = axios.post(`http://localhost:8082/api/v1/admin/add-teacher`, data);\n        return ret;\n    }\n\n    addClass(inputData) {\n        let data = {\n            //name: \"\", strength: 0, dep: \"\",\n            id: 0,\n            department: inputData.dep,\n            maxStrength: inputData.strength,\n            name: inputData.name,\n        }\n\n        let ret = axios.post(`http://localhost:8082/api/v1/admin/add-classes`, data);\n        return ret;\n    }\n\n    addParent(inputData) {\n        let data = {\n           \n\n            student: inputData.dep,\n            dob: inputData.dob,\n            email: inputData.email,\n            name: inputData.name,\n            password: inputData.dob,\n            phone_no: inputData.phoneNo,\n            parent_id: 0,\n            user_name: \"Parent \" + inputData.name\n\n        }\n\n        let ret = axios.post(`http://localhost:8082/api/v1/admin/add-parent`, data);\n        return ret;\n    }\n\n    /* Teacher functionalites */\n\n    addSesson(inputData) {\n\n        var result           = '';\n        var characters       = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var charactersLength = characters.length;\n        for ( var i = 0; i < characters.length; i++ ) { result += characters.charAt(Math.floor(Math.random() * charactersLength));}\n\n        const cookies = new Cookies();\n        let teacher_id = cookies.get('teacher-id').teacher_id\n\n        let data = {\n           \n                cls: inputData.classname,\n                period: inputData.period,\n                sessionId: 0,\n                teacher: teacher_id,\n                time: inputData.time,\n                urlToSession: \"https://demos.openvidu.io/openvidu-call/#/\" + result,\n\n        }\n\n        let ret = axios.post(`http://localhost:8082/api/v1/teacher/add_session`, data);\n        return ret;\n    }\n\n    addAssignment(inputData)\n    {\n        const cookies = new Cookies();\n        let teacher_id = cookies.get('teacher-id').teacher_id\n        \n        let data = {\n            classId: 0,\n            description: inputData.description,\n            end: inputData.start,\n            id: 0,\n            open: true,\n            session: 0,\n            start: inputData.end,\n            subject: 0,\n            teacher: teacher_id,\n            title: inputData.name,\n          }\n\n        let ret = axios.post(`http://localhost:8082/api/v1/teacher/add_assignment`, data);\n        return ret;\n    }\n\n    addExam(inputData)\n    {\n        const cookies = new Cookies();\n        let teacher_id = cookies.get('teacher-id').teacher_id\n        \n        let data = {\n            \n                endDate: \"2021-07-13T22:58:45.702Z\",\n                id: 0,\n                name: inputData.name,\n                noOfTests: 0,\n                stDate: inputData.date,\n            \n          }\n\n        let ret = axios.post(`http://localhost:8082/api/v1/teacher/add_exam`, data);\n        return ret;\n    }\n\n    addAttendance(sessionId)\n    {\n       \n        let ret = axios.get(`http://localhost:8082/api/v1/teacher/teacher/login/${studentId}/${sessionId}`);\n        return ret;\n       \n    }\n\n}\n\nexport default new AdminAuthDataService();"]},"metadata":{},"sourceType":"module"}